@model MonoSAR.Models.Operations.OperationSummaryItem

@{
    ViewData["Title"] = "EditOperation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Update Operation</h2>

<hr />

<div class="row">
    <div class="col-md-6">
        
        <h4>Operation</h4>
        <hr />

        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label">Title</label>
                <input asp-for="Title" required class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OperationNumber" class="control-label">Operation Number</label>
                <input asp-for="OperationNumber" required class="form-control" />
                <span asp-validation-for="OperationNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SequenceNumber" class="control-label">Sequence Number</label>
                <input asp-for="SequenceNumber" required class="form-control" />
                <span asp-validation-for="SequenceNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Start" class="control-label">Start Date</label>
                <input asp-for="Start" required class="form-control" type="date" />
                <span asp-validation-for="Start" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="End" class="control-label">End Date</label>
                <input asp-for="End" required class="form-control" type="date" />
                <span asp-validation-for="End" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Notes" class="control-label">Notes</label>
                <textarea asp-for="Notes" required class="form-control" rows="5"></textarea>
                <span asp-validation-for="Notes" class="text-danger"></span>

                <input asp-for="ID" hidden="hidden" type="hidden" />
            </div>
            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </form>

    </div>

    <div class="col-md-6">

        <h4>Participants (@Model.Members.Count)</h4>
        <hr />

        <form>
            <label for="memberId">Participant</label>
            <select id="memberId"></select>
            <input type="button" value="Add" class="btn btn-default add-participant" />
        </form>

        <p></p>

        @if (Model.Members.Count > 0)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (OperationMemberSummaryItem member in Model.Members.OrderBy(m => m.MemberName))
                    {
                        <tr>
                            <td><a href="/MembershipOfficer/ViewMember/@member.MemberID">@member.MemberName</a></td>
                            <td>
                                <form>
                                    <input hidden="hidden" type="hidden" name="operationMemberId" class="operation-member-id" value="@member.OperationMemberID" />
                                    <input type="button" value="Delete" class="btn btn-default delete-participant" />
                                </form>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        }

    </div>
</div>

<script type="text/javascript">
    $(function () {

        memberJSONCall();

        $('.add-participant').click(  function () {

            //console.log('add-participant clicked');
            //console.log('/api/OperationMember/@Model.ID/' + $('#memberId').val());
            fetch('/api/OperationMember/@Model.ID/' + $('#memberId').val(),
                { method: 'PUT' })
                .then(function () {
                    location.reload(true);
                });


        });

        $('.delete-participant').click(  function () {

            //console.log('delete-participant clicked');
            //console.log('/api/OperationMember/' + $(this).prev('.operation-member-id').val());
            fetch('/api/OperationMember/' + $(this).prev('.operation-member-id').val(),
                { method: 'DELETE' })
                .then(function () {
                    location.reload(true);
                });

        });

    });

    function memberJSONCall() {

        let urlMember = '/api/members/';

        fetch(urlMember)
            .then(res => res.json())
            .then((out) => {
                buildMemberSelect(out);
            })
            .catch(err => { throw err; });
    }

    function buildMemberSelect(jsonarray) {

        var memberSelect = $('#memberId');
        $.each(jsonarray, function (i, member)
        { 
            memberSelect.append(new Option(member.lastName + ', ' + member.firstName, member.memberId));
        });
    }

</script>

