@model MonoSAR.Models.Training.TrainingClassInsert
@{
    ViewData["Title"] = "TrainingOfficer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Record Training</h2>

<form class="" asp-action="CreateOccurrence" method="post" asp-controller="TrainingOfficer">
    <div class="form-group">
        <label for="formGroupExampleInput">Training Description</label>
        <select required asp-for="TrainingID" class="form-control"></select>
    </div>
    <div class="form-group">
        <label for="formGroupExampleInput">Training Date</label>
        <input type="date" class="form-control" required style="width:200px;" asp-for="TrainingDate">
    </div>

    <div class="form-inline">
        <div id="studentinstructorsplit" style="float:left;width:100%">
            <div id="students" style="float:left;text-align:left;">
                <h4>Students/Hours</h4>
                <select id="member" name="member" style="width:200px;" class="form-control"></select>

                <input name="hours" id="hours" required style="width:50px;" class="form-control" />
                <div id="container"><br /></div>
                <a href="#" id="filldetails" onclick="addFields()">[add another student]</a>
                <br /><br />
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
            <div id="instructors" style="float:left;text-align:left;">
                <h4>Instructors / Hours:</h4>
                <select id="instructor" name="instructor" style="width:200px;" class="form-control"></select>

                <input name="ihours" id="ihours" required style="width:50px;" class="form-control" />
                <div id="instructorcontainer"><br /></div>
                <a href="#" id="addinstructors" onclick="addInstructor()">[add another instructor]</a>
                <br /><br />
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </div>
    </div>
    <datalist id="traininglist"></datalist>
    <datalist id="memberlist"></datalist>
</form>

<script type="text/javascript">

    var memberList = [];

    window.onload = function () {

        //make the json calls
        //results sent to output parameter, goes to the buildDataList methods

        trainingJSONCall();

        memberJSONCall();

    };
    
    function trainingJSONCall() { 

        let urlTraining = '/api/trainings/';

        fetch(urlTraining)
            .then(res => res.json())
            .then((out) => {
                buildTripDataList(out);
            })
            .catch(err => { ; throw err });

    }

    function memberJSONCall() { 

        let urlMember = '/api/members/';

        fetch(urlMember)
            .then(res => res.json())
            .then((out) => {
                buildMemberDataList(out);
            })
            .catch(err => { throw err });

    }
    
    function buildMemberDataList(jsonarray) {

        memberSelect = document.getElementById('member');
        instructorSelect = document.getElementById('instructor');


        //build the option list, append
        for (var i = 0; i < jsonarray.length; i++) {
            var obj = jsonarray[i];

            memberSelect.options[memberSelect.options.length] = new Option(obj.lastName + ', ' + obj.firstName, obj.memberId);
            //console.log(obj.lastName + ', ' + obj.firstName, obj.memberId);
            memberList[i] = new Option(obj.lastName + ', ' + obj.firstName, obj.memberId);

            instructorSelect.options[instructorSelect.options.length] = new Option(obj.lastName + ', ' + obj.firstName, obj.memberId);
            //console.log(obj.lastName + ', ' + obj.firstName, obj.memberId);
            memberList[i] = new Option(obj.lastName + ', ' + obj.firstName, obj.memberId);

        }
        //memberList = daySelect.options;
    }
    
    function buildTripDataList(jsonarray) {

        //build the option list, append
        for (var i = 0; i < jsonarray.length; i++) {
            var obj = jsonarray[i];

            daySelect = document.getElementById('TrainingID');
            daySelect.options[daySelect.options.length] = new Option(obj.trainingTitle, obj.trainingId );
        }
    }

    function clone(obj) {
        if (obj === null || typeof (obj) !== 'object' || 'isActiveClone' in obj)
            return obj;

        if (obj instanceof Date)
            var temp = new obj.constructor(); //or new Date(obj);
        else
            var temp = obj.constructor();

        for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
                obj['isActiveClone'] = null;
                temp[key] = clone(obj[key]);
                delete obj['isActiveClone'];
            }
        }

        return temp;
    }

    function addInstructor() {

        // Number of inputs to create
        //var number = "1"; // document.getElementById("member").value;
        // Container <div> where dynamic content will be placed
        var container = document.getElementById("instructorcontainer");
        // Clear previous contents of the container

        var selectInstructor = document.createElement("select");
        selectInstructor.style = "width:200px;";
        selectInstructor.id = "instructor" + document.getElementsByName('instructor').length;
        selectInstructor.name = "instructor";
        selectInstructor.className = "form-control";

        //run through the existing memberlist, make new <select> options
        for (var i = 0; i < memberList.length; i++) {

            var obj = memberList[i];
            selectInstructor.options[selectInstructor.options.length] = new Option(obj.text, obj.value);
        }

        container.appendChild(selectInstructor);

        var inputHours = document.createElement("input");
        inputHours.type = "text";
        inputHours.required = true;
        inputHours.style = "width:70px;";
        inputHours.id = "ihours" + document.getElementsByName('ihours').length;
        inputHours.name = "ihours";
        inputHours.className = "form-control";
        container.appendChild(inputHours);


        container.appendChild(document.createElement("br"));

    }

    function addFields() {

        // Number of inputs to create
        //var number = "1"; // document.getElementById("member").value;
        // Container <div> where dynamic content will be placed
        var container = document.getElementById("container");
        // Clear previous contents of the container

        var selectMember = document.createElement("select");
        selectMember.style = "width:200px;";
        selectMember.id = "member" + document.getElementsByName('member').length;
        selectMember.name = "member";
        selectMember.className = "form-control";

        //run through the existing memberlist, make new <select> options
        for (var i = 0; i < memberList.length; i++) {

            var obj = memberList[i];
            selectMember.options[selectMember.options.length] = new Option(obj.text, obj.value);
        }

        container.appendChild(selectMember);
                
        var inputHours = document.createElement("input");
        inputHours.type = "text";
        inputHours.required = true;
        inputHours.style = "width:70px;";
        inputHours.id = "hours" + document.getElementsByName('hours').length;
        inputHours.name = "hours";
        inputHours.className = "form-control";
        container.appendChild(inputHours);

        container.appendChild(document.createElement("br"));

    }

</script>

<style type="text/css">
    #studentinstructorsplit {
        display: flex;
    }

    #students {
        flex: 0 0 65%;
    }

    #instructors {
        flex: 1;
    }
</style>
