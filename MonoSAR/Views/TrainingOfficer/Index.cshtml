@model MonoSAR.Models.Training.TrainingOccurrenceInsert
@{
    ViewData["Title"] = "TrainingOfficer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Training Management - Record Training</h2>


<form class="" asp-action="CreateOccurrence" method="post" asp-controller="TrainingOfficer">
    <div class="form-group">
        <label for="formGroupExampleInput">Training Description</label>
        <select required asp-for="TrainingID" class="form-control"></select>

    </div>

    <div class="form-group">
        <label for="formGroupExampleInput">Training Date</label>
        <input type="date" class="form-control" required style="width:200px;" asp-for="TrainingDate">
    </div>
    
    <div class="form-inline">
        <label for="formGroupExampleInput">Members / Hours:</label>
        <div style="display:inline-block; float:left; width:100%;">
            
            <select id="member" name="member" style="width:200px;" class="form-control"></select>
            
            <input name="hours" id="hours" required style="width:70px;" class="form-control" />
        </div>
        <div id="container"><br /></div>
        <a href="#" id="filldetails" onclick="addFields()">[add another]</a>
        <br /><br/>
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>

    <datalist id="traininglist"></datalist>
    <datalist id="memberlist"></datalist>
</form>




<script type="text/javascript">

    var memberList;

    window.onload = function () {

        //make the json calls
        //results sent to output parameter, goes to the buildDataList methods

        trainingJSONCall();

        memberJSONCall();

    };
    
    function trainingJSONCall() { 

        let urlTraining = '/api/trainings/';

        fetch(urlTraining)
            .then(res => res.json())
            .then((out) => {
                buildTripDataList(out);
            })
            .catch(err => { ; throw err });

    }

    function memberJSONCall() { 

        let urlMember = '/api/members/';

        fetch(urlMember)
            .then(res => res.json())
            .then((out) => {
                buildMemberDataList(out);
            })
            .catch(err => { throw err });

    }
    
    function buildMemberDataList(jsonarray) {

        //build the option list, append
        for (var i = 0; i < jsonarray.length; i++) {
            var obj = jsonarray[i];

            daySelect = document.getElementById('member');
            daySelect.options[daySelect.options.length] = new Option(obj.lastName + ', ' + obj.firstName, obj.memberId);
            console.log(obj.lastName + ', ' + obj.firstName, obj.memberId);
        }

        memberList = daySelect.options;

    }
    
    function buildTripDataList(jsonarray) {


        //build the option list, append
        for (var i = 0; i < jsonarray.length; i++) {
            var obj = jsonarray[i];

            daySelect = document.getElementById('TrainingID');
            daySelect.options[daySelect.options.length] = new Option(obj.trainingTitle, obj.trainingId );

        }

    }

    function addFields() {
        console.log('addFieldsClicked');
        // Number of inputs to create
        //var number = "1"; // document.getElementById("member").value;
        // Container <div> where dynamic content will be placed
        var container = document.getElementById("container");
        // Clear previous contents of the container

        var selectMember = document.createElement("select");
        selectMember.style = "width:200px;";
        selectMember.id = "member" + document.getElementsByName('member').length;
        selectMember.name = "member";
        selectMember.className = "form-control";
        selectMember.options = memberList;

        for (var i = 0; i < memberList.length; i++) {
            var obj = memberList[i];
            selectMember.options[selectMember.options.length] = obj; 
        }

        container.appendChild(selectMember);
                
        var inputHours = document.createElement("input");
        inputHours.type = "text";
        inputHours.required = true;
        inputHours.style = "width:70px;";
        inputHours.id = "hours" + document.getElementsByName('hours').length;
        inputHours.name = "hours";
        //inputHours.value = document.getElementById['hours'].value;
        inputHours.className = "form-control";
        container.appendChild(inputHours);

        container.appendChild(document.createElement("br"));

    }

</script>

