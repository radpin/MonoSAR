@model RegisterViewModel
@{
    ViewData["Title"] = "Register";
}

<div class="row">
    <div class="col-md-4">
        <form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post">
            <h4>Create a new account</h4>
            <h6></h6>
            <h6>1) Use the email address from your SAR application.</h6>
            <h6>2) Verify your account by email before you login.</h6>
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConfirmPassword"></label>
                <input asp-for="ConfirmPassword" class="form-control" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
            <h6>Password rules:</h6>
            <ul>
                <li>At least <strong>8 characters</strong>.</li>
                <li>It has to contain a <strong>number</strong>.</li>
                <li>It has to contain a <strong>non-alphanumeric character</strong> like one of these: (!$%^&*()<>,.?/:;'"{[}]|\=+-_)</li>.
            </ul>
            <button type="submit" class="btn btn-default">Register</button>
        </form>

    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
